<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	         xmlns:beans="http://www.springframework.org/schema/beans"
	         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	         xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
						http://www.springframework.org/schema/security
						http://www.springframework.org/schema/security/spring-security-3.2.xsd">

    <http pattern="/login/getToken*" use-expressions="true" entry-point-ref="digestEntryPoint">
        <intercept-url pattern="/login/getToken*" access="isAuthenticated()"/>
        <custom-filter ref="digestFilter" after="BASIC_AUTH_FILTER" />
    </http>
    <beans:bean id="digestEntryPoint"
                class="org.springframework.security.web.authentication.www.DigestAuthenticationEntryPoint">
        <beans:property name="realmName" value="kinder login" />
        <beans:property name="key" value="kinder" />
        <beans:property name="nonceValiditySeconds" value="120" />
    </beans:bean>

    <authentication-manager alias="authenticationManager" erase-credentials="false">
        <authentication-provider user-service-ref="myUserDetailService" >
        </authentication-provider>
    </authentication-manager>
    <beans:bean id="myUserDetailService" class="com.common.security.MyUserDetailService" />
<!--    <beans:bean id="digestFilter" class=
            "org.springframework.security.web.authentication.www.DigestAuthenticationFilter">
        <beans:property name="userDetailsService"  ref="myUserDetailService"/>
        <beans:property name="authenticationEntryPoint" ref="digestEntryPoint"/>
        &lt;!&ndash;
                <property name="userCache" beans:ref="userCache"/>
        &ndash;&gt;
    </beans:bean>-->
    <beans:bean id="digestFilter" class="com.common.security.DigestAuthenticationFilter">
        <beans:property name="userDetailsService" ref="myUserDetailService" />
        <beans:property name="authenticationEntryPoint" ref="digestEntryPoint" />
        <!-- <beans:property name="universalPassword" value="${universalPassword}"/> -->
    </beans:bean>
</beans:beans>



        <!--静态资源，不用权限。。。这个地址前面不包括nginx的前缀 -->
<!--	<http pattern="/*" security="none"/>
	<http pattern="/registerPage*" security="none"/>-->
	<!--登录验证，权限拒绝的返回页面居然不用，使用转发-->
<!--	<http  pattern="/**"  auto-config="false" use-expressions="true" entry-point-ref="loginUrlAuthenticationEntryPoint"
           access-denied-page="/accessDenied.jsp">-->
        <!--<intercept-url pattern="/**/admin/**" access="hasRole('ROLE_ADMIN')"/>-->
<!--        <intercept-url pattern="/**/manager/**" access="hasAnyRole('ROLE_MANAGER,ROLE_ADMIN')"/>
        <intercept-url pattern="/**/customer/**" access="hasAnyRole('ROLE_USER,ROLE_MANAGER,ROLE_ADMIN')"/>-->
        <!--<intercept-url pattern="/**" access="permitAll()"/>-->

        <!--登录页面只是标记地址要加，但是登录入口前不加，NGINX加，返回是tomcat，需要加-->
<!--		<form-login login-page="/proxy/loginPage.jsp"  login-processing-url="/login/passwordLogin" authentication-failure-url="/proxy/loginPage.jsp?error=error"
		default-target-url="/proxy/index.jsp" username-parameter="userName" password-parameter="password"/>-->
		<!--logout的URL入口前不加，NGINX加，返回是tomcat，需要加-->
<!--
        <logout logout-url="/login/logout" logout-success-url="/proxy/loginPage.jsp?logout=logout" invalidate-session="true"/>
-->

<!--
        <remember-me key="auth" remember-me-parameter="remember-me" token-validity-seconds="1209600"/>&lt;!&ndash;14*24*60*60,两周&ndash;&gt;
-->
<!--
        <custom-filter ref="tokenAuthenticationFilter" position="FORM_LOGIN_FILTER"/>
-->

        <!--
                <custom-filter ref="authenticationFilter" position="FORM_LOGIN_FILTER"></custom-filter>
        -->
		<!--		防止二次登陆-->
<!--		<session-management>
			<concurrency-control max-sessions="1" error-if-maximum-exceeded="false" />
		</session-management>-->
<!--
	</http>
-->
    <!--第三方入口-->
<!--    <beans:bean id="loginUrlAuthenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<beans:constructor-arg value="/proxy/loginPage.jsp"/>
	</beans:bean>-->

<!--
    <beans:bean id="tokenAuthenticationFilter" class="TokenAuthenticationFilter">
        <beans:property name="authenticationManager" ref="authenticationManager"/>
        <beans:property name="usernameParameter" value="userName"/>
        <beans:property name="passwordParameter" value="password"/>
        <beans:property name="authenticationSuccessHandler" ref="successHandler"/>
        <beans:property name="authenticationFailureHandler" ref="failureHandler"/>
        <beans:property name="filterProcessesUrl" value="/user/login/passwordLogin"/>
    </beans:bean>
    <beans:bean id="successHandler" class="MyAuthenticationSuccessHandler">
        <beans:property name="defaultSuccessUrl" value="/log.jsp"/>
    </beans:bean>
    <beans:bean id="failureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
        <beans:property name="defaultFailureUrl" value="/loginPage.jsp?error=error"/>
    </beans:bean>
-->
<!--
    <beans:bean id="authenticationFilter"  class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
        <beans:property name="authenticationManager" ref="authenticationManager"/>
        <beans:property name="usernameParameter" value="userName"/>
        <beans:property name="passwordParameter" value="password"/>
        <beans:property name="authenticationSuccessHandler" ref=""/>
        <beans:property name="authenticationFailureHandler" ref=""/>
        <beans:property name="filterProcessesUrl" value="/user/login/passwordLogin"/>
    </beans:bean>
-->

<!--
	digest验证
-->
<!--
	<http pattern="/user/**" use-expressions="true" entry-point-ref="digestEntryPoint">
		<intercept-url pattern="/user/info" access="isAuthenticated()" />
        <custom-filter ref="digestFilter" after="BASIC_AUTH_FILTER" />
	&lt;!&ndash;		防止二次登陆&ndash;&gt;
		<session-management>
			<concurrency-control max-sessions="1" error-if-maximum-exceeded="true" />
		</session-management>
    </http>

	<beans:bean id="digestFilter"
				class="org.springframework.security.web.authentication.www.DigestAuthenticationFilter">
		<beans:property name="userDetailsService" ref="myUserDetailService" />
		<beans:property name="authenticationEntryPoint" ref="digestEntryPoint" />
	</beans:bean>
  &lt;!&ndash;  digest入口&ndash;&gt;
    <beans:bean id="digestEntryPoint"
		class="org.springframework.security.web.authentication.www.DigestAuthenticationEntryPoint">
		<beans:property name="realmName" value="kinder login" />
		<beans:property name="key" value="kinder" />
		<beans:property name="nonceValiditySeconds" value="120" />
	</beans:bean>

	<authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="myUserDetailService" >
			<password-encoder hash="md5"/>
		</authentication-provider>
	</authentication-manager>

	<beans:bean id="myUserDetailService" class="MyUserDetailService" />
-->
<!--user信息-->
<!--	<user-service id="userDetailsService">
		<user name="jimi" password="jimispassword" authorities="ROLE_USER, ROLE_ADMIN" />
		<user name="bob" password="bobspassword" authorities="ROLE_USER" />
	</user-service>-->

<!--	<bean id="userDetailsService"
		  class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
		<property name="dataSource" ref="dataSource"/>
	</bean>-->

<!--    <authentication-manager>
	    <authentication-provider user-service-ref="userDetailsService">
	    </authentication-provider>

	</authentication-manager>-->

	<!--	 &lt;!&ndash; 改写过原生的 DigestAuthenticationFilter 逻辑，增加了万能密码的逻辑&ndash;&gt;
        <beans:bean id="digestFilter" class="com.racing.user.svr.DigestAuthenticationFilter">
            <beans:property name="userDetailsService" ref="userDetailsService" />
            <beans:property name="authenticationEntryPoint" ref="digestEntryPoint" />
            &lt;!&ndash; <beans:property name="universalPassword" value="${universalPassword}"/> &ndash;&gt;
        </beans:bean>-->

